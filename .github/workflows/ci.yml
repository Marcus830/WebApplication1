#Trigger on every push
#Build your Docker images
#Run them in a local GitHub Actions environment
#

# options does 3 things:
# 1. Ensures the DB is healthy before your backend tries to talk to it.
# 2. Sets the health check interval to 10 seconds.
# 3. Sets the health check timeout to 5 seconds.
name: CI Pipeline
# Set your workflow to run on push events to the main
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    # Spins up PostgreSQL as a service container
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres   # match your database username.
          POSTGRES_PASSWORD: 12345678  # match your database password.
          POSTGRES_DB: Complaint   # match your database name
        ports:
          - 5432:5432
        options: >-         # ensures the DB is healthy before your backend tries to talk to it.
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code # Checks out your code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Build containers with docker-compose  #builds your images just like locally
        run: docker compose build

      - name: Run containers in background #starts frontend + backend + postgres.
        run: docker compose up -d

      - name: Wait for PostgreSQL to be ready  
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:5000/health; then
              echo "Backend is up!"
              exit 0
            fi
            echo "Waiting for backend..."
            sleep 5
          done
          echo "Backend did not start in time" && exit 1

      - name: Verify frontend container     #makes sure frontend responds on port 5000
        run: curl -s http://localhost:5000 || exit 1

      - name: Run Tests
        run: dotnet test ./WebApplication1.csproj --no-build --verbosity normal

